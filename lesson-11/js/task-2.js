'use strict'

if (confirm('Почати тестування?')) {
  /**
   * Задача 2. Дано інформацію про прибуток К магазинів протягом тижня. Знайти :
   */

  // two-dimensional array generation ===============================================
  function generateRandomTable(rowsNumber, colsNumber, minValue = 1, maxValue = 10) {
    const table = [];
    for (let rowIndex = 0; rowIndex < rowsNumber; rowIndex++) {
      table.push([]);
      for (let colIndex = 0; colIndex < colsNumber; colIndex++) {
        const randNum = minValue + Math.floor(Math.random() * (maxValue - minValue + 1))
        table[rowIndex].push(randNum);
      }
    }
    return table;
  }


  const shopProfit = generateRandomTable(3, 7, 1, 1000);
  console.log(shopProfit);

  // ========================================================================================
  // 1) загальний прибуток кожного масиву за тиждень; ==========================
  // ========================================================================================

  // for (let i of table) {
  //   let sum = 0;
  //   for (let row of i) {
  //     sum += row;
  //   }
  //   console.log(sum);
  // }

  function weekProfit(table) {
    return table.map(row => row.reduce((sum, num) => sum + num, 0));
  }

  console.log('1) загальний прибуток кожного масиву за тиждень:');

  console.log(weekProfit(shopProfit));

  console.log('==========================================');

  // ===================================================================================================================
  // 2) загальний прибуток усіх магазинів по дням (загальний прибуток усіх магазинів за понеділок, за вівторок, і т.д.);
  // ===================================================================================================================

  const dayProfit = (table) => {
    let arr = [];
    for (let i = 0; i < table[0].length; i++) {
      let sum = 0;
      for (let j = 0; j < table.length; j++) {
        sum += table[j][i];
      }
      arr.push(sum);
    }
    return arr;
  }

  console.log('===========================================');

  console.log('2) загальний прибуток усіх магазинів по дням (загальний прибуток усіх магазинів за понеділок, за вівторок, і т.д.);');
  console.log(dayProfit(shopProfit));

  console.log('==========================================');

  // =======================================================================================
  // 3) загальний прибуток за робочі дні ===================================================
  // =======================================================================================

  const workDayProfit = (table) => {
    let sum = 0;
    for (let i = 0; i < table.length; i++) {
      for (let j = 0; j < 5; j++) {
        sum += table[i][j];
      }
    }
    return sum;
  }

  console.log('===========================================');

  console.log('3) загальний прибуток за робочі дні');

  console.log(workDayProfit(shopProfit));

  console.log('===========================================');

  // ======================================================================================
  // 4) загальний прибуток за вихідні дні =================================================
  // ======================================================================================

  const weekendDayProfit = (table) => {
    let sum = 0;
    for (let i = 0; i < table.length; i++) {
      for (let j = 6; j < table[0].length; j++) {
        sum += table[i][j];
      }
    }
    return sum;
  }

  console.log('===========================================');

  console.log('4) загальний прибуток за вихідні дні');

  console.log(weekendDayProfit(shopProfit));

  console.log('===========================================');

  // ===================================================================================================
  // 5) максимальний прибуток за середу ================================================================
  // ===================================================================================================

  const maxWenProfit = (table) => {
    let arr = table.map(el => el[2]);
    return Math.max(...arr);
  }

  console.log('===========================================');

  console.log('5) максимальний прибуток за середу');

  console.log(maxWenProfit(shopProfit));

  console.log('===========================================');

  // ======================================================================================
  // 6) сформувати загальний список (одновимірний масив) зі значенням, які що більші за 200
  // ======================================================================================

  const profitGrate = (table, val = 200) => {
    let res = table.flat(Infinity);
    return res.filter(el => el > val);
  }

  console.log('===========================================');

  console.log('6) сформувати загальний список (одновимірний масив) зі значенням, які що більші за 200');

  console.log(profitGrate(shopProfit, 200));

  console.log('===========================================');

  // =======================================================================================
  // 7) відсортувати кожен тиждень за зростанням ===========================================
  // =======================================================================================

  const weekSortUp = (table) => {
    return table.map(item => item.sort((el1, el2) => el1 - el2));
  }

  console.log('===========================================');

  console.log('7) відсортувати кожен тиждень за зростанням');

  console.log(weekSortUp(shopProfit));

  console.log('===========================================');

  // =============================================================================================
  // 8) відсортувати тижні (рядки) за спаданням максимального елементи у цьому тижні (рядку), 
  // тобто при порівнянні рядків потрібно порівнювати максимальні елементи у кожному з цих рядків 
  // =============================================================================================

  const sortMaxOfWeek = (table) => {
    return table.sort((el1, el2) => Math.max(...el2) - Math.max(...el1));
  }

  console.log('===========================================');

  console.log('8) відсортувати тижні (рядки) за спаданням максимального елементи у цьому тижні (рядку), тобто при порівнянні рядків потрібно порівнювати максимальні елементи у кожному з цих рядків ');

  console.log(sortMaxOfWeek(shopProfit));
  console.log('===========================================');

  // ===================================================================================================
  // 9) упорядкувати тижні (рядки) за спаданням суми елементів у рядку (тобто при порівнянні двох рядків 
  // треба знайти суму кожного з рядків і порівнювати ці суми, на основі цих сум буде зрозуміло, який з
  // елементів повинен іти раніше).
  // ===================================================================================================

  function sortSumOfWeek(table) {
    return table.sort((el1, el2) => {
      const el1Sum = el1.reduce((sum, val) => sum + val);
      const el2Sum = el2.reduce((sum, val) => sum + val);
      el2Sum - el1Sum;
    });
  }

  console.log('===========================================');

  console.log('9) упорядкувати тижні (рядки) за спаданням суми елементів у рядку (тобто при порівнянні двох рядків треба знайти суму кожного з рядків і порівнювати ці суми, на основі цих сум буде зрозуміло, який з елементів повинен іти раніше).');

  console.log(sortSumOfWeek(shopProfit));




  document.writeln(`
    <div class="task__container">
      <h1 class="task__title">Homework #11</h1>
      <p class="task__info">Задача 2. Дано інформацію про прибуток К магазинів протягом тижня. Знайти :</p>
      <ol>
        <li>загальний прибуток кожного масиву за тиждень;</li>
        <li>загальний прибуток усіх магазинів по дням (загальний прибуток усіх магазинів за понеділок, за вівторок, і т.д.);</li>
        <li>загальний прибуток за робочі дні</li>
        <li>загальний прибуток за вихідні дні</li>
        <li>максимальний прибуток за середу</li>
        <li>сформувати загальний список (одновимірний масив) зі значенням, які що більші за 200</li>
        <li>відсортувати кожен тиждень за зростанням</li>
        <li>відсортувати тижні (рядки) за спаданням максимального елементи у цьому тижні (рядку), тобто при порівнянні рядків потрібно порівнювати максимальні елементи у кожному з цих рядків</li>
        <li>упорядкувати тижні (рядки) за спаданням суми елементів у рядку (тобто при порівнянні двох рядків треба знайти суму кожного з рядків і порівнювати ці суми, на основі цих сум буде зрозуміло, який з елементів повинен іти раніше).</li>
      </ol>
      <h2 class="task__sub-title">Розв'язок:</h2>
      <p class="task__desc">в консолі</p>
    </div>
    `);

}





