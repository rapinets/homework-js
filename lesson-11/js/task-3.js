'use strict'

if (confirm('–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è?')) {
  /**
   * –ó–∞–¥–∞—á–∞ 3. –ú–æ—Ä—Å—å–∫–∏–π –±—ñ–π. –í–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏–Ω–æ–º –Ω–∞ –¥–≤–æ–≤–∏–º—ñ—Ä–Ω–æ–º—É –ø–æ–ª—ñ —Ä–æ–∑–º—ñ—Ä–æ–º 6*6 —Ä–æ–∑—Ç–∞—à–æ–≤—É—î—Ç—å—Å—è 5 –∫–æ—Ä–∞–±–ª—ñ–≤. –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á —Å—Ç—Ä—ñ–ª—è—î –≤–∫–∞–∑—É—é—á–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∏. 
   * –ì—Ä–∞ –ø—Ä–æ–¥–æ–≤–∂—É—î—Ç—å—Å—è –ø–æ–∫–∏ –Ω–µ –ø–æ—Ç–æ–ø–ª–µ–Ω–æ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–∞–∫—ñ–Ω—á–∞—Ç—å—Å—è —Å–Ω–∞—Ä—è–¥–∏.
   */

  function generatePlayField() {
    const table = [];
    for (let rowIndex = 0; rowIndex < 6; rowIndex++) {
      table.push([]);
      for (let colIndex = 0; colIndex < 6; colIndex++) {
        table[rowIndex].push(0);
      }
    }
    return table;
  }

  function getShip() {
    const playField = generatePlayField();
    let shipsPlaced = 0;
    while (shipsPlaced < 5) {
      let row = Math.floor(Math.random() * 6);
      let col = Math.floor(Math.random() * 6);
      if (playField[row][col] === 0 && playField[row][col] !== 1) {
        playField[row][col] = 1;
        shipsPlaced++;
      }
    }
    return playField;
  }

  console.log(getShip());


  function getPlay() {
    const arr = getShip();
    let remainingShips = 5;
    let userShot = parseInt(prompt('–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—Ä—ñ–ª—ñ–≤ –≤—ñ–¥ 1 –¥–æ 36', '5'));
    let win = false;

    while (remainingShips > 0 && userShot > 0) {
      const userRowInput = parseInt(prompt('–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ä—è–¥–∫–∞ –≤—ñ–¥ 1 –¥–æ 6', '1'));
      const userColInput = parseInt(prompt('–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Å—Ç–æ–≤–ø—á–∏–∫–∞ –≤—ñ–¥ 1 –¥–æ 6', '1'));

      if ((isNaN(userRowInput) || isNaN(userColInput)) || (userRowInput < 0 || userColInput < 0) || (userColInput > 6 || userRowInput > 6)) {
        alert('–¢–∞–∫–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –Ω–µ —ñ—Å–Ω—É—î');
        continue;
      }

      if (arr[userRowInput - 1][userColInput - 1] === 1) {
        arr[userRowInput - 1][userColInput - 1] = 0;
        remainingShips--;
        userShot--;
        alert(`–í–ª—É—á–∏–ª–∏! –ó–∞–ª–∏—à–∏–ª–æ—Å—è ${remainingShips} –∫–æ—Ä–∞–±–ª—ñ–≤ —ñ ${userShot} –ø–æ—Å—Ç—Ä—ñ–ª—ñ–≤`);
      } else {
        userShot--;
        alert(`–ú–∏–º–æ! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑, —É –≤–∞—Å –∑–∞–ª–∏—à–∏–ª–æ—Å—è ${userShot} –ø–æ—Å—Ç—Ä—ñ–ª—ñ–≤`);
      }

      if (remainingShips === 0) win = true;

      // if (userShot === 0) shot = true;
    }
    return win;
  }

  const win = getPlay();

  if (win) {
    alert('–í–∏ –ø–æ—Ç–æ–ø–∏–ª–∏ –≤—Å—ñ –∫–æ—Ä–∞–±–ª—ñ! üéâ');
  } else {
    alert('–ì—Ä—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ù–µ –≤—Å—ñ –∫–æ—Ä–∞–±–ª—ñ –∑–Ω–∏—â–µ–Ω—ñ. üòî');
  }

}

